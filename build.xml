<project name="Meteor Image Generator">

    <description>
        ant targets to call from main ant file in project root
    </description>

    <property name="meteor.folder" location="${user.home}/.meteor" />
    <property name="meteor.symlink" location="${meteor.folder}/meteor" />
    <exec executable="readlink" failonerror="true" outputproperty="meteor.exe.link">
        <arg value="${meteor.symlink}" />
    </exec>
    <property name="meteor.exe" location="${meteor.folder}/${meteor.exe.link}" />
    <exec executable="dirname" failonerror="true" outputproperty="platform-folder">
        <arg value="${meteor.exe}" />
    </exec>
    <property name="meteor-node" location="${platform-folder}/dev_bundle/bin/node" />
    <property name="node" value="${meteor-node}" />

    <exec executable="dirname" failonerror="true" outputproperty="meteor.images.folder">
        <arg value="${ant.file}" />
    </exec>
    <property name="index.js" location="${meteor.images.folder}/index.js" />
    <property name="up-to-date-sizes-path" location="${meteor.images.folder}/tests/sizes.js" />

    <property name="mobile-config.js" location="mobile-config.js" />

    <target name="debug-info" description="output information about folders and exes">
        <echo>meteor's node exe: ${meteor-node}</echo>
        <exec executable="${meteor-node}" failonerror="true">
            <arg value="--version" />
        </exec>
        <echo>configured node exe: ${node}</echo>
        <exec executable="${node}" failonerror="true">
            <arg value="--version" />
        </exec>
        <echo>index.js: ${index.js}</echo>
        <echo>mobile-config.js: ${mobile-config.js}</echo>
        <echo>sizes out of date test: ${up-to-date-sizes-path}</echo>
    </target>

    <target name="generate-images" depends="check-for-necessary-files-and-folders" description="generate icons and launchImages">
        <generate type="icons" />
        <generate type="launchScreens" />
    </target>

    <macrodef name="generate">
        <attribute name="type" description="icons or launchScreens" />
        <sequential>
            <exec executable="${node}" failonerror="true">
                <arg value="${index.js}"/>
                <arg value="images"/>
                <arg value="@{type}"/>
            </exec>
        </sequential>
    </macrodef>

    <target name="check-for-necessary-files-and-folders">
        <fail-if-file-does-not-exist file="resources" />
        <fail-if-file-does-not-exist file="resources/icons.png" />
        <fail-if-file-does-not-exist file="resources/launchScreens.png" />
        <fail-if-file-does-not-exist file="resources/icons/" />
        <fail-if-file-does-not-exist file="resources/launchScreens/" />
    </target>

    <macrodef name="fail-if-file-does-not-exist">
        <attribute name="file" />
        <sequential>
            <exec executable="ls" failonerror="true">
                <arg value="@{file}"/>
            </exec>
        </sequential>
    </macrodef>

    <target name="update-mobile-config" description="add code into mobile-config.js">
        <update-mobile-config type="icons" />
        <update-mobile-config type="launchScreens" />
        <echo>configuration added to ${mobile-config.js}</echo>
        <echo>this should only be run once, or the old ones should be removed by hand</echo>
    </target>

    <macrodef name="update-mobile-config">
        <attribute name="type" description="icons or launchScreens" />
        <sequential>
            <exec executable="${node}" failonerror="true" output="${mobile-config.js}" append="true">
                <arg value="${index.js}"/>
                <arg value="code"/>
                <arg value="@{type}"/>
            </exec>
        </sequential>
    </macrodef>

    <target name="out-of-date-check" description="check if sizes.js matches currently installed meteor version">
        <echo>this will makes sure that the info image info in the meteor images tool matches the current meteor version</echo>
        <exec executable="${node}" failonerror="true">
            <arg value="${up-to-date-sizes-path}"/>
            <arg value="${user.home}" />
        </exec>
    </target>

 </project>